{"version":3,"sources":["src/components/InputContainer/InputContainer.js","src/components/ResultContainer/ResultContainer.js","src/components/ActionButton/ActionButton.js","src/components/ButtonsContainer/ButtonsContainer.js","src/utilities/index.js","src/screens/HomeScreen/HomeScreen.js","src/navigation/HomeStack/HomeStack.js","src/navigation/AppNavigation/AppNavigation.js","src/themes/index.js","App.js"],"names":["InputContainer","_ref","inputValue","_jsx","View","style","styles","container","children","Text","text","numberOfLines","StyleSheet","create","flex","backgroundColor","padding","justifyContent","alignItems","fontSize","Platform","OS","color","ResultContainer","output","marginBottom","ActionButton","handleInput","customStyles","TouchableOpacity","button","onPress","Ionicons","name","size","buttonText","height","width","borderRadius","fontWeight","ButtonsContainer","_jsxs","rowContainer","background1","background2","paddingBottom","flexDirection","valueType","value","isNaN","windowHeight","Dimensions","get","HomeScreen","_useState","useState","_useState2","_slicedToArray","input","setInput","_useState3","_useState4","result","setResult","prev","lastInput","slice","evaluate","_unused","_objectSpread","select","web","alignSelf","HomeStack","Stack","createNativeStackNavigator","theme","useTheme","Navigator","initialRouteName","screenOptions","headerShown","statusBarColor","colors","statusbar","Screen","component","AppNavigation","DefaultTheme","dark","primary","background","primaryText","secondaryText","inputBackground","buttonBackground1","buttonBackground2","inputOutputBackground","App","ThemeProvider","NavigationContainer","StatusBar"],"mappings":"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","file":"static/js/app.73fa584f.chunk.js","sourcesContent":["import { StyleSheet, Text, View, Platform } from \"react-native\";\nimport React from \"react\";\n\nconst InputContainer = ({ inputValue }) => {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text} numberOfLines={2}>\n        {inputValue}\n      </Text>\n    </View>\n  );\n};\n\nexport default InputContainer;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#e6e6e6\",\n    padding: 10,\n    justifyContent: \"center\",\n    alignItems: \"flex-end\",\n  },\n  text: {\n    fontSize: Platform.OS === \"web\" ? 35 : 40,\n    color: \"black\",\n  },\n});\n","import { StyleSheet, Text, View, Platform } from \"react-native\";\nimport React from \"react\";\n\nconst ResultContainer = ({ output }) => {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text} numberOfLines={2}>\n        {output}\n      </Text>\n    </View>\n  );\n};\n\nexport default ResultContainer;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#e6e6e6\",\n    padding: 10,\n    justifyContent: \"center\",\n    alignItems: \"flex-end\",\n    marginBottom: 50,\n  },\n  text: {\n    fontSize: Platform.OS === \"web\" ? 40 : 50,\n    color: \"black\",\n  },\n});\n","import { StyleSheet, Text, TouchableOpacity } from \"react-native\";\nimport React from \"react\";\nimport { Ionicons } from \"@expo/vector-icons\";\nconst ActionButton = ({ text, handleInput, customStyles }) => {\n  return (\n    <TouchableOpacity\n      style={[styles.button, customStyles]}\n      onPress={() => handleInput(text)}\n    >\n      {text === \"backspace\" ? (\n        <Ionicons name=\"backspace\" size={30} color=\"black\" />\n      ) : (\n        <Text style={styles.buttonText}>{text}</Text>\n      )}\n    </TouchableOpacity>\n  );\n};\n\nexport default ActionButton;\n\nconst styles = StyleSheet.create({\n  button: {\n    height: 90,\n    width: 90,\n    borderRadius: 50,\n    backgroundColor: \"#dee2e3\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  buttonText: { fontSize: 35, color: \"black\", fontWeight: \"bold\" },\n});\n","import { StyleSheet, View } from \"react-native\";\nimport React from \"react\";\nimport ActionButton from \"../ActionButton\";\n\nconst ButtonsContainer = ({ handleInput }) => {\n  return (\n    <View style={styles.container}>\n      <View style={styles.rowContainer}>\n        <ActionButton\n          text=\"AC\"\n          handleInput={handleInput}\n          customStyles={styles.background1}\n        />\n        <ActionButton\n          text=\"( )\"\n          handleInput={handleInput}\n          customStyles={styles.background2}\n        />\n        <ActionButton\n          text=\"%\"\n          handleInput={handleInput}\n          customStyles={styles.background2}\n        />\n        <ActionButton\n          text=\"/\"\n          handleInput={handleInput}\n          customStyles={styles.background2}\n        />\n        <ActionButton\n          text=\"*\"\n          handleInput={handleInput}\n          customStyles={styles.background2}\n        />\n      </View>\n\n      <View style={styles.rowContainer}>\n        <ActionButton text=\"6\" handleInput={handleInput} />\n        <ActionButton text=\"7\" handleInput={handleInput} />\n        <ActionButton text=\"8\" handleInput={handleInput} />\n        <ActionButton text=\"9\" handleInput={handleInput} />\n        <ActionButton\n          text=\"-\"\n          handleInput={handleInput}\n          customStyles={styles.background2}\n        />\n      </View>\n      <View style={styles.rowContainer}>\n        <ActionButton text=\"2\" handleInput={handleInput} />\n        <ActionButton text=\"3\" handleInput={handleInput} />\n        <ActionButton text=\"4\" handleInput={handleInput} />\n        <ActionButton text=\"5\" handleInput={handleInput} />\n        <ActionButton\n          text=\"+\"\n          handleInput={handleInput}\n          customStyles={styles.background2}\n        />\n      </View>\n      <View style={styles.rowContainer}>\n        <ActionButton text=\"0\" handleInput={handleInput} />\n        <ActionButton text=\"1\" handleInput={handleInput} />\n        <ActionButton text=\".\" handleInput={handleInput} />\n        <ActionButton text=\"backspace\" handleInput={handleInput} />\n        <ActionButton\n          text=\"=\"\n          handleInput={handleInput}\n          customStyles={styles.background2}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default ButtonsContainer;\n\nconst styles = StyleSheet.create({\n  container: { flex: 5, paddingBottom: 20},\n  rowContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    marginBottom: 5,\n  },\n  background1: {\n    backgroundColor: \"#aee9f5\",\n  },\n  background2: {\n    backgroundColor: \"#7df0a7\",\n  },\n});\n","// this function will be used to detect whether the input is digit or\n// mathetical operator and other action types\n\nexport const valueType = value => {\n  if (!isNaN(value) || value==='.') {\n    return 'digit';\n  }\n\n  switch (value) {\n    case 'AC':\n      return 'clear';\n    case '+':\n    case '-':\n    case '*':\n    case '/':\n    case '%':\n      return 'operation';\n    case '=':\n      return 'calculate';\n    case 'backspace':\n      return 'back';\n  }\n};\n","import { StyleSheet, View, Platform, Dimensions } from \"react-native\";\n\nimport React, { useState } from \"react\";\nimport InputContainer from \"../../components/InputContainer\";\nimport ResultContainer from \"../../components/ResultContainer\";\nimport ButtonsContainer from \"../../components/ButtonsContainer\";\nimport { valueType } from \"../../utilities\";\nimport { evaluate } from \"mathjs\";\n\nconst windowHeight = Dimensions.get(\"window\").height;\n\nconst HomeScreen = () => {\n  const [input, setInput] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  const handleInput = (value) => {\n    const inputType = valueType(value);\n\n    switch (inputType) {\n      case \"digit\":\n        setInput((prev) => prev + value);\n        break;\n      case \"operation\": {\n        // if last enterted value is also a operator then deleting\n        // the last chracter and adding new operator\n        let lastInput = valueType(input.slice(-1));\n        if (lastInput === \"operation\") {\n          setInput((prev) => {\n            prev = prev.slice(0, -1);\n            return prev + value;\n          });\n        } else {\n          setInput((prev) => prev + value);\n        }\n        break;\n      }\n      case \"clear\":\n        setInput(\"\");\n        setResult(\"\");\n        break;\n      case \"back\":\n        setInput((prev) => prev.slice(0, -1));\n        break;\n      case \"calculate\":\n        // calculte only when last entered value is not a operator\n        let lastInput = valueType(input.slice(-1));\n        if (lastInput !== \"operation\") {\n          try {\n            setResult(evaluate(input));\n          } catch {\n            setResult(\"invalid input\");\n          }\n        }\n        break;\n    }\n  };\n  return (\n    <View style={styles.container}>\n      <InputContainer inputValue={input} />\n      <ResultContainer output={result} />\n      <ButtonsContainer handleInput={handleInput} />\n    </View>\n  );\n};\n\nexport default HomeScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    ...Platform.select({\n      web: {\n        width: 550,\n        height: windowHeight,\n        alignSelf: \"center\",\n      },\n    }),\n  },\n});\n","import React from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { useTheme } from \"styled-components/native\";\nimport HomeScreen from \"../../screens/HomeScreen\";\n\nconst HomeStack = () => {\n  const Stack = createNativeStackNavigator();\n  const theme = useTheme();\n\n  return (\n    <Stack.Navigator\n      initialRouteName=\"HomeScreen\"\n      screenOptions={{\n        headerShown: false,\n        statusBarColor: theme.colors.statusbar,\n      }}\n    >\n      <Stack.Screen name=\"HomeScreen\" component={HomeScreen} />\n    </Stack.Navigator>\n  );\n};\n\nexport default HomeStack;\n","import React from \"react\";\nimport HomeStack from \"../HomeStack\";\n\nconst AppNavigation = () => {\n  const renderAppStack = () => {\n    return <HomeStack />;\n  };\n\n  return renderAppStack();\n};\n\nexport default AppNavigation;\n","import { DefaultTheme } from \"@react-navigation/native\";\n\nconst theme = {\n  ...DefaultTheme,\n  dark: false,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: \"#051526\",\n    background: \"#f0e6e9\",\n    primaryText: \"black\",\n    secondaryText: \"white\",\n    statusbar: \"#051526\",\n    inputBackground: \"gray\",\n    buttonBackground1: \"#aee9f5\",\n    buttonBackground2: \"#7df0a7\",\n    inputOutputBackground: \"#e6e6e6\",\n  },\n};\n\nexport default theme;\n","import { StatusBar } from \"expo-status-bar\";\nimport AppNavigation from \"./src/navigation/AppNavigation\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { ThemeProvider } from \"styled-components/native\";\nimport theme from \"./src/themes\";\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <NavigationContainer>\n        <AppNavigation />\n        <StatusBar style=\"auto\" />\n      </NavigationContainer>\n    </ThemeProvider>\n  );\n}\n"],"sourceRoot":""}